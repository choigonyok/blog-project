apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-ha
spec:
  serviceName: mysql-ha
  replicas: 3
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      initContainers:
        - name: init-mysql
          image: achoistic98/blog_mysqls:latest
          command:
          - bash
          - "-c"
          - |
            set -ex
            
            [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            if [[ $ordinal -eq 0 ]]; then
              cp /cfg/mysql-master.cnf /mnt/cfg/mysql.cnf
              cp /cfg/init-master.sql /mnt/init/init.sql
            else
              cp /cfg/mysql-slave.cnf /mnt/cfg/mysql.cnf
              cp /cfg/init-slave.sql /mnt/init/init.sql
            fi
          volumeMounts:
            - name: master-slave-cfg
              mountPath: /mnt/cfg/
            - name: master-slave-init
              mountPath: /mnt/init/
      containers:
        - name: database
          image: mysql:latest
          ports:
            - containerPort: 3306
          volumeMounts:
          - name: master-slave-cfg
            mountPath: /etc/mysql/conf.d
          - name: master-slave-init
            mountPath: /docker-entrypoint-initdb.d
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "blogdb"
            - name: MYSQL_USER
              value: "slave"
            - name: MYSQL_PASSWORD
              value: "password"
      volumes:
        - name: database-volume
          hostPath:
            path: /volumes # Replace with the actual path on your host machine
        - name: master-slave-cfg
          hostPath:
            path: /volumes/cfg
        - name: master-slave-init
          hostPath:
            path: /volumes/init
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-ha-0
spec:
  selector:
    statefulset.kubernetes.io/pod-name: mysql-ha-0
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-ha-1
spec:
  selector:
    statefulset.kubernetes.io/pod-name: mysql-ha-1
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-ha-2
spec:
  selector:
    statefulset.kubernetes.io/pod-name: mysql-ha-2
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  type: ClusterIP
---
# CREATE USER 'replicas'@'%' IDENTIFIED BY 'password';
# GRANT REPLICATION SLAVE ON *.* TO 'replicas'@'%';
# FLUSH PRIVILEGES;
# show master status;

# # //flush hosts;
# # // file, position 값 복사


# STOP REPLICA IO_THREAD FOR CHANNEL '';
# CHANGE MASTER TO MASTER_HOST='172.20.28.53', MASTER_PORT=3306, MASTER_USER='replicas', MASTER_PASSWORD='password', MASTER_LOG_FILE='mysql-log.000003', MASTER_LOG_POS=2183799, GET_MASTER_PUBLIC_KEY=1;
# start slave;

# # mysql -u slave -ppassword
# //show slave status\G;
# //show processlist\G;